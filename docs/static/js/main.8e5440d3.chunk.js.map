{"version":3,"sources":["components/AddCat.js","components/GifGridItem.js","helpers/getGifs.js","components/GifImages.js","hooks/useFetchGifs.js","components/GifExperApp.js","index.js"],"names":["AddCat","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","cats","type","value","onChange","target","GifGridItem","title","url","className","src","alt","getGifs","category","a","fetch","res","json","data","gifs","map","img","id","images","downsized_medium","GifImages","loading","state","setstate","useEffect","then","useFetchGifs","GifExperApp","categories","c","ReactDOM","render","document","getElementById"],"mappings":"mMA6BeA,EA1BA,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAEb,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAaA,OACI,sBAAMC,SAVW,SAAAC,GACjBA,EAAEC,iBAEuB,KAAtBJ,EAAWK,SAEdP,GAAc,SAAAQ,GAAI,OAAKN,GAAL,mBAAoBM,OACtCL,EAAc,MAId,SACI,uBACIM,KAAK,OACLC,MAAOR,EACPS,SAhBS,SAACN,GAAD,OAAOF,EAAcE,EAAEO,OAAOF,a,QCExCG,EATK,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,IACzB,OACI,sBAAKC,UAAU,yCAAf,UACI,qBAAKC,IAAKF,EAAKG,IAAKJ,IADxB,KAEI,4BAAIA,Q,uBCFHK,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAGbN,EAHa,iDAGmCK,EAHnC,6BAFX,oCAEW,SAIDE,MAAMP,GAJL,cAIbQ,EAJa,gBAKGA,EAAIC,OALP,uBAKZC,EALY,EAKZA,KAGDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRf,MAAOc,EAAId,MACXC,IAAG,UAAEa,EAAIE,cAAN,aAAE,EAAYC,iBAAiBhB,QAZvB,kBAgBZW,GAhBY,4CAAH,sDC2BLM,EAxBG,SAAC,GAAgB,IAAfZ,EAAc,EAAdA,SAEhB,ECJwB,SAACA,GAGzB,MAA0BnB,mBAAS,CAC/BwB,KAAM,GACNQ,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAoBA,OAfAC,qBAAU,WAEPjB,EAAQC,GACFiB,MAAK,SAAAT,GAEFO,EAAS,CACLV,KAAMG,EACNK,SAAS,SAKtB,CAACb,IAGGc,EDnByBI,CAAalB,GAAhCU,EAAb,EAAOL,KAAcQ,EAArB,EAAqBA,QAErB,OACI,gCACI,oBAAIjB,UAAU,oCAAd,SAAmDI,IAE/Ca,GAAW,mBAAGjB,UAAU,mCAAb,qBAEb,qBAAKA,UAAU,YAAf,SAEMc,EAAOH,KAAI,SAAAF,GACP,OAAO,cAAC,EAAD,eAEKA,GADCA,EAAKI,aEQ3BU,EAvBK,WAEhB,MAAoCtC,mBAAS,CAAC,kBAA9C,mBAAOuC,EAAP,KAAmBxC,EAAnB,KAEA,OACI,qCACI,6CACA,cAAC,EAAD,CAAQA,cAAeA,IACvB,uBAEA,6BAEQwC,EAAWb,KAAI,SAACc,GACZ,OAAO,cAAC,EAAD,CAEHrB,SAAUqB,GADLA,Y,MCbjCC,IAASC,OAAO,cAAC,EAAD,IAAiBC,SAASC,eAAe,W","file":"static/js/main.8e5440d3.chunk.js","sourcesContent":["import { useState } from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AddCat = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleChange = (e) => setInputValue(e.target.value)\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        if(inputValue.trim() === '') return;\r\n\r\n        setCategories(cats => [inputValue, ...cats]);\r\n        setInputValue('');\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input \r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={handleChange}\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AddCat;\r\n\r\nAddCat.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","const GifGridItem = ({title, url}) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title}/>\\\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GifGridItem\r\n","const KEY = 'tkTDIMb4WCkyy9HJ4wa6Fq70YnTD4STg';\r\n\r\nexport const getGifs = async(category) => {\r\n\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${category}&limit=10&api_key=${KEY}`;\r\n    const res = await fetch(url);\r\n    const {data} =  await res.json();\r\n\r\n    \r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    });\r\n\r\n    return gifs;\r\n}","import React from \"react\";\r\nimport GifGridItem from \"./GifGridItem\";\r\n\r\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\r\n\r\nconst GifImages = ({category}) => {\r\n\r\n    const {data: images, loading} = useFetchGifs(category);\r\n\r\n    return (\r\n        <div>\r\n            <h3 className='animate__animated animate__fadeIn'>{category}</h3>\r\n            {\r\n                loading && <p className='animate__animated animate__flash'>Loading</p>\r\n            }\r\n            { <div className=\"card-grid\">\r\n                {\r\n                    images.map(data => {\r\n                        return <GifGridItem \r\n                                key={data.id}\r\n                                {...data}\r\n                            />\r\n                    })\r\n                }\r\n            </div> }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GifImages","import { useState, useEffect } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    })\r\n\r\n    useEffect(() => {\r\n\r\n       getGifs(category)\r\n            .then(img => {\r\n                \r\n                setstate({\r\n                    data: img,\r\n                    loading: false\r\n                });\r\n\r\n            })\r\n\r\n    }, [category]);\r\n\r\n\r\n    return state;\r\n}","import { useState } from \"react\";\r\nimport AddCat from \"./AddCat\";\r\nimport GifImages from \"./GifImages\";\r\n\r\nconst GifExperApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['One Punch Man']);\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExperApp</h2>\r\n            <AddCat setCategories={setCategories} />\r\n            <hr />\r\n\r\n            <ol>\r\n                {\r\n                    categories.map((c) => {\r\n                        return <GifImages \r\n                            key={c} \r\n                            category={c}/>\r\n                    })\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifExperApp\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExperApp from './components/GifExperApp';\nimport './index.css';\n\nReactDOM.render(<GifExperApp />, document.getElementById('root'));"],"sourceRoot":""}